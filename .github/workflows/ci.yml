name: CI

on:
  push:
  # pull_request:
  schedule:
    # Runs at 08:00 UTC every day
    - cron: "0 8 * * *"

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          cachix: "true"
          CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}

  nix:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup

      # registery
      - if: success() || failure()
        run: nix path-info --derivation n#emacs
      - if: success() || failure()
        run: nix path-info --derivation p#ci-instantiate

      - if: success() || failure()
        run: nix build .#profile

      - if: success() || failure()
        run: nix path-info --derivation .#less-build.ci-instantiate
      - if: success() || failure()
        run: nix path-info --derivation .#less-download-flakes.ci-instantiate
      - if: success() || failure()
        run: nix path-info --derivation .#less-build.less-download-flakes.ci-instantiate
      - if: success() || failure()
        run: nix path-info --derivation .#with-emacs-gtk.ci-instantiate
      - if: success() || failure()
        run: nix path-info --derivation .#with-py310.ci-instantiate

  nix-versions:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup

      - if: success() || failure()
        run: |
          ./nix/tests/nix_instantiate.py \
            --nix n#nixVersions.nix_2_23 n#nixVersions.nix_2_24 n#nixVersions.nix_2_25 .#deps.nix .#nixwrapper \
            --drv .#ci-instantiate p#ci-instantiate

  python:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: nix build .#pypkgs-all
      - run: nix build .#python.inject.pygit2.regexfactory

  js:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/build_nix
        with:
          drv: .#js
          CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}

  nixd:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/build_nix
        with:
          drv: .#nixtools
          CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}

  emacs:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - emacs: ".#emacs"
            cache: true
          - emacs: ".#emacs-gtk"
            cache: true
          - emacs: ".#emacs30"
            cache: true
          - emacs: ".#emacs29"
            cache: true

          - emacs: ".#p.emacs30"
            cache: false
          - emacs: ".#p.emacs30-nox"
            cache: false

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: nix path-info --derivation ${{ matrix.emacs }}
      - if: ${{ matrix.cache }}
        uses: ./.github/actions/build_nix
        with:
          drv: ${{ matrix.emacs }}
          CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - run: nix profile install ${{ matrix.emacs }}
      # for vterm
      - run: nix profile install .#p.cmake .#p.gnumake .#p.gcc .#p.libtool
      # for lilypond-mode
      - run: nix profile install .#p.lilypond
      - run: mv emacs/alan-private.example.el emacs/alan-private.el

      - if: success() || failure()
        run: emacs --batch --eval "(setq ci-build-verbose t)" -l emacs/ci.el --eval "(ci-byte-compile-core)"
        timeout-minutes: 5
      - if: success() || failure()
        run: emacs --batch --eval "(setq ci-build-verbose t)" -l emacs/ci.el --eval "(ci-show-build-errs)"
        timeout-minutes: 5
      - if: success() || failure()
        run: emacs --batch -l emacs/ci.el --eval "(ci-show-build-errs)"
        timeout-minutes: 5
      - if: success() || failure()
        run: emacs --batch -l emacs/ci.el --eval "(ci-byte-compile)"
        timeout-minutes: 5
      - if: success() || failure()
        run: emacs --batch --eval "(setq ci-build-verbose t)" -l emacs/ci.el --eval "(ci-wait-for-pkgs-build)"
        timeout-minutes: 5

  # update-python:
  #   if: ${{ github.event_name == 'schedule' && github.ref_name == 'master' }}
  #   needs: setup
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: ./.github/actions/setup
  #     - run: (cd python && nix run ..#poetry -- lock && nix run ..#poetry -- up --latest --no-install)
  #     - uses: peter-evans/create-pull-request@v7
  #       with:
  #         token: ${{ secrets.PAT }}
  #         add-paths: |
  #           python/pyproject.toml
  #           python/poetry.lock
  #         commit-message: "update python dependencies"
  #         title: "update python dependencies"
  #         branch: "update-python-deps"

  update-nixpkgs:
    if: ${{ github.event_name == 'schedule' && github.ref_name == 'master' }}
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: nix run .#nix-stable -- flake update
      - uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.PAT }}
          add-paths: |
            flake.lock
          commit-message: "update flakes"
          title: "update flakes"
          branch: "update-flakes"

  dafny:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/build_nix
        with:
          drv: .#dafny
          CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}

  schemat:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/build_nix
        with:
          drv: .#schemat
          CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}

  rust-scripts:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/build_nix
        with:
          drv: .#mods.rust.setuid
          CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}

  home-manager:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: nix build .#homeConfigurations.alan.activation-script
      - run: nix build .#homeConfigurations.alan.config.home.path
      # TODO (25-5): fails with
      #   Activating dconfSettings
      #   dbus[12407]: Failed to start message bus: Failed to open "/etc/dbus-1/session.conf": No such file or directory
      #   dbus-run-session: EOF reading address from bus daemon
      #   Error: Process completed with exit code 127.
      # - run: nix run .#home-manager -- switch --flake .
